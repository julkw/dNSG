akka {
  actor {
    provider = cluster

    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      "com.github.julkw.dnsg.util.dNSGSerializable" = kryo
    }
  }

  remote {
    artery {
      enabled = on
      transport = tcp # prefer tcp over aeron-udp
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
    }
  }

  cluster {
    min-nr-of-members = ${com.github.julkw.dnsg.nodes-expected}
    seed-nodes = [
      "akka://"${com.github.julkw.dnsg.system-name}"@"${akka.remote.artery.canonical.hostname}":"${akka.remote.artery.canonical.port}
    ]
    singleton {
      singleton-name = "ClusterCoordinator"
    }
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}